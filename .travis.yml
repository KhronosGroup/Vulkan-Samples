language: cpp
os: linux

compiler:
  - gcc
  - clang

branches:
  only:
    - branch
    - master

stages:
  - Check
  - Build
  - Test

services:
  - docker

before_install:
  - docker pull khronosgroup/vulkan-samples

before_script:
  - docker run --name VKB -v ~/build/KhronosGroup/Vulkan-Samples:/home/vulkan-samples -dit khronosgroup/vulkan-samples

after_script:
  - docker stop VKB

jobs:
  fast_finish: true
  include:
    - stage: Check
    - name: "Doxygen"
      script:
      - docker exec VKB sh -c "cd /home/vulkan-samples && mkdir -p doxygen && doxygen docs/doxygen/doxyfile && if [ $(stat -c%s doxygen/warnings.txt) -gt 0 ]; then cat doxygen/warnings.txt; exit 1; fi"
      - docker exec VKB sh -c "if [ $(stat -c%s /home/vulkan-samples/doxygen/warnings.txt) -gt 0 ]; then cat /home/vulkan-samples/doxygen/warnings.txt; exit 1; fi"
    # - name: "Copyright Headers"
    #   script: echo "Copyright Headers"
    # - name: "Snake Case (Optional)"
    #   script: echo "Snake Case (Optional)"
    # - name: "Clang Format"
    #   script: echo "Clang Format"
    # - name: "Clang Tidy"
    #   script: echo "Clang Tidy"
    # - stage: Build
    # - name: "Windows"
    #   os: windows
    #   script: echo "Windows"
    # - name: "Unix"
    #   script: echo "Unix"
    # - name: "Android"
    #   script: echo "Android"
    # - stage: Test
    # - name: "Generate Sample"
    #   script: echo "Generate Sample"