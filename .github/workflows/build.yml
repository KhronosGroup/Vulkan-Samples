name: Build Project

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  build:
    name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
    strategy:
      matrix:
        platform: [windows, ubuntu, macos]
        build_type: [Release]
    env:
      PARALLEL: -j 2
    runs-on: "${{ matrix.platform }}-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - if: ${{ matrix.platform == 'ubuntu' }}
        name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev
      - name: Configure
        run: cmake -H"." -B"build/${{ matrix.platform }}" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON
      - name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
        run: cmake --build "build/${{ matrix.platform }}" --target vulkan_samples --config ${{ matrix.build_type }} ${{ env.PARALLEL }}


  build_d2d:
    name: "Build Ubuntu with Direct To Display"
    env:
      PARALLEL: -j 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev
      - name: Configure
        run: cmake -H"." -B"build/ubuntu-latest-d2d" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON -DVKB_WSI_SELECTION=D2D
      - name: "Build Ubuntu in Release with VKB_WSI_SELECTION=D2D"
        run: cmake --build "build/ubuntu-latest-d2d" --target vulkan_samples --config Release ${{ env.PARALLEL }}

  build_android:
    name: "Build Android in ${{ matrix.build_type }}"
    container: ghcr.io/khronosgroup/vulkan-samples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: "Run generate script"
        run: ./bldsys/scripts/generate_android_gradle.sh
      - name: "Explicitly setup SDK path with local.properties."
        run: |
          echo "sdk.dir=/usr/local/android-sdk" > build/android_gradle/local.properties
          echo "ndk.dir=/usr/local/android-ndk" >> build/android_gradle/local.properties
      - name: "Ensure Ninja is installed."
        run: |
          apt-get update
          apt install ninja-build
      - name: "Build Android using gradlew."
        working-directory: build/android_gradle
        run: ./gradlew :assembleRelease
