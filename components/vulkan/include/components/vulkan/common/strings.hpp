#pragma once

// TODO: auto generate this for every type

#include <string>

#include <vulkan/vulkan.h>

namespace components
{
namespace vulkan
{
inline std::string to_string(VkResult result)
{
#define TO_STRING_CASE(x) \
	case x:               \
		return #x

	switch (result)
	{
		TO_STRING_CASE(VK_SUCCESS);
		TO_STRING_CASE(VK_NOT_READY);
		TO_STRING_CASE(VK_TIMEOUT);
		TO_STRING_CASE(VK_EVENT_SET);
		TO_STRING_CASE(VK_EVENT_RESET);
		TO_STRING_CASE(VK_INCOMPLETE);
		TO_STRING_CASE(VK_ERROR_OUT_OF_HOST_MEMORY);
		TO_STRING_CASE(VK_ERROR_OUT_OF_DEVICE_MEMORY);
		TO_STRING_CASE(VK_ERROR_INITIALIZATION_FAILED);
		TO_STRING_CASE(VK_ERROR_DEVICE_LOST);
		TO_STRING_CASE(VK_ERROR_MEMORY_MAP_FAILED);
		TO_STRING_CASE(VK_ERROR_LAYER_NOT_PRESENT);
		TO_STRING_CASE(VK_ERROR_EXTENSION_NOT_PRESENT);
		TO_STRING_CASE(VK_ERROR_FEATURE_NOT_PRESENT);
		TO_STRING_CASE(VK_ERROR_INCOMPATIBLE_DRIVER);
		TO_STRING_CASE(VK_ERROR_TOO_MANY_OBJECTS);
		TO_STRING_CASE(VK_ERROR_FORMAT_NOT_SUPPORTED);
		TO_STRING_CASE(VK_ERROR_FRAGMENTED_POOL);
		TO_STRING_CASE(VK_ERROR_UNKNOWN);
		TO_STRING_CASE(VK_ERROR_OUT_OF_POOL_MEMORY);
		TO_STRING_CASE(VK_ERROR_INVALID_EXTERNAL_HANDLE);
		TO_STRING_CASE(VK_ERROR_FRAGMENTATION);
		TO_STRING_CASE(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS);
		TO_STRING_CASE(VK_PIPELINE_COMPILE_REQUIRED);
		TO_STRING_CASE(VK_ERROR_SURFACE_LOST_KHR);
		TO_STRING_CASE(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR);
		TO_STRING_CASE(VK_SUBOPTIMAL_KHR);
		TO_STRING_CASE(VK_ERROR_OUT_OF_DATE_KHR);
		TO_STRING_CASE(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR);
		TO_STRING_CASE(VK_ERROR_VALIDATION_FAILED_EXT);
		TO_STRING_CASE(VK_ERROR_INVALID_SHADER_NV);
		TO_STRING_CASE(VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT);
		TO_STRING_CASE(VK_ERROR_NOT_PERMITTED_KHR);
		TO_STRING_CASE(VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT);
		TO_STRING_CASE(VK_THREAD_IDLE_KHR);
		TO_STRING_CASE(VK_THREAD_DONE_KHR);
		TO_STRING_CASE(VK_OPERATION_DEFERRED_KHR);
		TO_STRING_CASE(VK_OPERATION_NOT_DEFERRED_KHR);
		default:
			return "UNKNOWN";
	}
#undef TO_STRING_CASE
}
}        // namespace vulkan
}        // namespace components