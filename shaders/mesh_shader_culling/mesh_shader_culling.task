#version 450
/* Copyright (c) 2023, Holochip Corporation
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 the "License";
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#extension GL_EXT_mesh_shader: require
#extension GL_GOOGLE_include_directive: require

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    float cull_center_x;
    float cull_center_y;
    float cull_radius;
    float meshlet_density;
} ubo;

#include "mesh_shader_culling/mesh_shader_shared.h"

taskPayloadSharedEXT SharedData sharedData;

const float squareDimension = 1.1f;

void main()
{
    uint N = 0;

    sharedData.positionTransformation = vec4(ubo.cull_center_x, ubo.cull_center_y, 0.0f, 0.0f);
    sharedData.cullRadius = ubo.cull_radius;

    if (ubo.meshlet_density == 0)
    {
        N = 4;
    }
    else if (ubo.meshlet_density == 1)
    {
        N = 6;
    }
    else if (ubo.meshlet_density == 2)
    {
        N = 8;
    }
    else
    {
        N = 2;
    }

    sharedData.subDimension = squareDimension / N;
    EmitMeshTasksEXT(N, N, 1);
}
